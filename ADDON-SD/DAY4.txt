package dsa;       // MiddleElement

public class MiddleElement {
	class LinkedList {
	    Node head;

	    
	    static class Node {
	        int data;
	        Node next;

	        Node(int d) {
	            data = d;
	            next = null;
	        }
	    }

	   
	    public void append(int newData) {
	        Node newNode = new Node(newData);
	        if (head == null) {
	            head = newNode;
	            return;
	        }
	        Node last = head;
	        while (last.next != null) {
	            last = last.next;
	        }
	        last.next = newNode;
	    }

	    public void printMiddle() {
	        Node slowPtr = head;
	        Node fastPtr = head;

	        if (head != null) {
	            while (fastPtr != null && fastPtr.next != null) {
	                fastPtr = fastPtr.next.next;
	                slowPtr = slowPtr.next;
	            }
	            System.out.println("The middle element is: " + slowPtr.data);
	        }
	    }

	 
	    public void printList() {
	        Node temp = head;
	        while (temp != null) {
	            System.out.print(temp.data + " ");
	            temp = temp.next;
	        }
	        System.out.println();
	    }

	    public static void main(String[] args) {
	        LinkedList list = new LinkedList();

	        
	        list.append(1);
	        list.append(2);
	        list.append(3);
	        list.append(4);
	        list.append(5);

	        System.out.println("Linked List:");
	        list.printList();

	        
	        list.printMiddle();
	    }
	    }
}
